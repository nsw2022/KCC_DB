** 1일 수업 **

ALTER SESSION SET "_ORACLE_SCRIPT"=true;
CREATE USER kcc IDENTIFIED BY 1234;

* 세팅
 sqlplus/nolog
 conn sys as sysdba
 create user kcc identified by 1234;
 grant connect, resource, dba to kcc;
 connect kcc/1234

* oracle_exam2.sql 불러오기
 @D:\KCC\DB\oracle_exam2.sql 엔터
 commit;

* hr계정 unlock
 conn /as sysdba
 alter user hr identified by hr account unlock;
 conn hr/hr
 select * from tab;

* scott 계정 불러오기
 conn /as sysdba
 @C:\oraclexe\app\oracle\product\11.2.0\server\rdbms\admin\scott.sql
 alter user scott identified by tiger;
 conn scott/tiger
 select * from tab;

* 수업 내용
  - SQL 
   기본 질의문(select) : where, order by, groub by, having, 연산자
   오라클 함수
   DCL, 제약조건, DML
   조인, 서브쿼리
   인덱스, 뷰, 시퀀스
   
  - PL/SQL
   기본문법(조건문, 반복문, 커서, 예외)
   프로시저, 함수, 트리거, 패키지

  - DB 모델링(설계)
   논리적 설계
   물리적 설계
   정규화

  - 미니프로젝트 수행

 * sql 수업

  - 테이블 목록 불러오기
 -> SELECT * FROM tab;

  SELECT 컬럼목록 FROM 테이블명
 -> SELECT * FROM employees; 
  
 - 별칭 => AS, ""
 -> SELECT employee_id AS 사원번호, last_name "사원이름" FROM employees;

 - 중복된 데이터 제거
 - SELECT DISTINCT job_id FROM employees;

<mission kcc>
1. 각 학생의 평점을 검색하라(학번, 이름, 학점) : student -> 별칭사용
 - SELECT sno "학번", sname "이름", avr "학점" FROM student;

2. 각 과목의 학점을 검색하라.(과목번호, 과목명, 학점수) : course -> 별칭
  - SELECT cno "과목번호", cname "과목명", st_num "학점수" FROM course;

3. 각 교수의 직위를 검색하라.(교수번호, 교수이름, 직위) : professor ->별칭
 - SELECT pno "교수번호", pname "교수이름", orders "직위" FROM professor;

4. 급여를 10% 인상했을 때 각 직원마다 연간 지급되는 급여를 검색하라.: emp
     (사원번호, 사원이름, 연봉) -> 별칭
  - SELECT eno "사원번호", ename "사원이름", sal*1.1 "연봉" FROM emp;

5. 현재 학생의 평점은 4.0 만점이다. 이를 4.5만점으로 환산해서 검색하라.: student
    (학번, 이름, 환산학점) -> 별칭
  - SELECT sno "학번", sname "이름", avr*4.5/4.0 "환산학점" FROM student;

 * 정렬(묶음 검색) : ORDER BY절
  SELECT 컬럼들 FROM 테이블명
    ORDER BY [컬럼명|인덱스] [옵션:DESC]
  => ORDER BY [컬럼명],[컬럼명]

 -> SELECT eno, ename, sal FROM emp
        ORDER BY sal DESC;


 퀴즈 kcc>각 학과별로 교수의 정보를 부임일자 순으로 검색하라.
  -> SELECT section, pname, hiredate FROM professor
        ORDER BY section, hiredate;

 * 조건절 : 조건에 맞는 일부 데이터만 불러오기 (WHERE절)
  SELECT employee_id, last_name, hire_date
    FROM employees
    WHERE hire_date >= '03/01/01'
    AND last_name = 'King';

 * 연산자
  - AND
  - 5000 ~ 10000 사이의 직원들 내역을 출력하라.
  - SELECT employee_id, last_name, salary
      FROM employees
      WHERE salary >= 5000 AND salary <= 10000;

 - BETWEEN AND 연산자
 - SELECT employee_id, last_name, salary
      FROM employees
      WHERE salary BETWEEN 5000 AND 10000;

 - OR 연산자
 -> SELECT employee_id, last_name, job_id
       FROM employees
       WHERE job_id = 'FI_MGR' OR job_id = 'FI_ACCOUNT';

 - IN 연산자
 -> SELECT employee_id, last_name, job_id
       FROM employees
       WHERE job_id IN('FI_MGR', 'FI_ACCOUNT');

mission kcc>
1. 2,3학년 학생 중에서 학점이 2.0에서 3.0 사이의 학생을 검색하라. 
-> SELECT * FROM student
	WHERE syear IN(2, 3)
	AND avr BETWEEN 2.0 AND 3.0;

2. 화학, 물리학과 학생중에 1,2학년 학생을 성적 순으로 검색하라.
   -> SELECT * FROM student
	WHERE major IN('화학', '물리')
	AND syear IN(1, 2)
	ORDER BY avr DESC;  

3. 화학과 정교수를 검색하라.
  -> SELECT * FROM professor
	WHERE section ='화학'
	AND orders = '정교수';

 - NOT 연산자
 -> SELECT department_id, department_name
        FROM departments
        WHERE department_id != 10
        WHERE department_id <> 10
        WHERE department_id ^=10
        WHERE NOT department_id = 10


 - IS NOT NULL 연산자
 -> SELECT employee_id, last_name, commission_pct
       FROM employees
       WHERE commission_pct IS NOT NULL;

 - LIKE 연산자
 -> '김%' => '김'으로 시작하는 문자열  예)김길동, 김밥
 -> '%과' => '과'로 끝나는 문자열 예)인사과, 화학과
 -> '%김%' => '김'이라는 문자를 포함 하는 모든 문자열  예)김씨, 돌김, 참치김밥
 -> '화_' => '화'로 시작하는 2글자 문자열  예)화학, 화약
 -> '_등_' => '등'이 가운데 들어간 3글자 문자열 예)고등어, 전등불

 - 07년도 입사한 사원의 목록을 출력하라.
 -> SELECT employee_id, last_name, hire_date
       FROM employees
       WHERE hire_date BETWEEN '07/01/01' AND '07/12/31';

 -> SELECT employee_id, last_name, hire_date
       FROM employees
       WHERE hire_date LIKE '07%';

 퀴즈hr>last_name 컬럼에 'a'가 없는 사원을 출력하라.
  -> SELECT employee_id, last_name
        FROM employees
        WHERE last_name NOT LIKE '%a%';

<mission kcc>
1. 화학과 학생 중에 성이 '관'씨인 학생을 검색하라.
-> SELECT * FROM student
	WHERE major='화학' AND sname LIKE '관%';

2. 부임일이 1995년 이전의 정교수를 검색하라.
-> SELECT * FROM professor
	WHERE hiredate < '1995/1/1'
	AND orders = '정교수';

3. 성과 이름이 각각 1글자인 교수를 검색하라.(이름이 2자)
 -> SELECT * FROM professor
	WHERE pname LIKE '__';

4. 화학과 학생 중에 4.5환산 학점이 3.5이상인 학생을 검색하라.
-> SELECT * FROM student
	WHERE major = '화학'
	AND avr*4.5/4.0 >= 3.5;

5. 화학과 이외 학과 학생의 평점을 각 학과별 그리고 학년별 순서로 출력하라.
-> SELECT * FROM student
	WHERE major != '화학'
	ORDER BY major, syear;

정리>
    SELECT 컬럼들
      FROM 테이블명
      WHERE 조건절(연산자: AND, OR, BETWEEN AND, IN, NOT, IS NOT NULL, LIKE)
      ORDER BY 컬럼들

 * 집합
  - UNION : 결과 값을 합집합으로 묶음, 중복은 제거
  - UNION ALL : 결과 값을 합집합으로 묶음, 중복 허용
  - MINUS : 결과 값을 차집합으로 묶음, A - B = A (순수한 A)
  - INTERSECT : 결과 값을 교집합으로 묶음
 
 SELECT * FROM A
  UNION ALL, UNION, MINUS, INTERSECT
 SELECT * FROM B

 주의>열(컬럼)의 개수와 자료형이 일치

 SELECT eno, ename, dno
  FROM emp
  WHERE dno = 10
 UNION
 SELECT eno, ename, dno
  FROM emp
  WHERE dno = 20

퀴즈>집합연산자를 이용하여 emp 테이블의 내용 중 10번 부서번호의
        사원들은 제외한 내용을 출력하라.
  SELECT eno, ename, dno
   FROM emp
   MINUS
  SELECT eno, ename, dno
   FROM emp
   WHERE dno = 10;

<mission scott>
1. emp테이블을 사용하여 20번, 30번 부서에 근무하고 있는 사원 중
    급여(sal)가 2000 초과인 사원을 다음 두가지 방식의 SELECT문을 
    사용하여 사원번호, 급여, 부서번호를 출력하라.
    1)집합 연산자를 사용하지 않은 방식
     SELECT empno, ename, job, sal, deptno
	FROM emp
	WHERE deptno IN(20, 30)
	AND sal >2000;

    2)집합 연산자를 사용한 방식
    SELECT empno, ename, job, sal, deptno
	FROM emp
	WHERE deptno = 20
	AND sal > 2000
    UNION
    SELECT empno, ename, job, sal, deptno
	FROM emp
	WHERE deptno = 30
	AND sal > 2000	

 * 그룹함수
  - sum(), avg(), max(), count()
  - SELECT sum(salary) FROM employees;
  - SELECT avg(salary) FROM employees;
  - SELECT max(salary) FROM employees;
  - SELECT count(salary) FROM employees;

 * GROUP BY 절
  -> 그룹별로 통계값 출력

  -> 부서별로 평균급여를 출력하라.
  -> SELECT department_id, avg(salary)
        FROM employees
        GROUP BY department_id;

  주의사항> SELECT절 컬럼내역을 반드시 그룹함수
                또는 GROUP BY 절에서 사용한 컬럼만 가능하다.

 퀴즈 hr>부서별로 사원의 수와 커미션을 받는 사원의 수를 부서별로 오름차순으로 출력하라
  -> SELECT department_id, count(*), count(commission_pct)
        FROM employees
        GROUP BY department_id
        ORDER BY department_id

<mission kcc>
 1. 화학과 학년별 평균 학점을 검색하라.
SELECT syear, major, avg(avr)
	FROM student
	WHERE major = '화학'
	GROUP BY major, syear

 2. 각 학과별 학생수를 검색하라.
  SELECT major, count(*)
	FROM student
	GROUP BY major

 3. 화학과 생물학과 학생을 4.5환산 학점의 평균을 각각 검색하라.
  SELECT major, avg(avr*4.5/4.0)
	FROM student
	WHERE major IN('화학', '생물')
	GROUP BY major;

 * HAVING 절
  - 전체 그룹 중에서 일부 그룹만 추출하기 위해서
 
  - 부서별 급여 평균이 5000 미만의 부서의 부서번호와 평균급여를 출력하라.
  - SELECT department_id, AVG(salary)
      FROM employees
      WHERE AVG(salary) < 5000  ==> error
      GROUP BY department_id;

   - SELECT department_id, AVG(salary)
      FROM employees
      GROUP BY department_id
      HAVING AVG(salary) < 5000;

<mission kcc>
 1. 화학과를 제외한 학생들의 과별 평점평균을 검색하라.
   SELECT major, ROUND(AVG(avr), 2)
    FROM student
    GROUP BY major
    HAVING major != '화학'

 2. 화학과를 제외한 각 학과별 평점 중에 평점이 2.0이상 학과정보를 검색하라.
  SELECT major, ROUND(AVG(avr), 2)
    FROM student
    GROUP BY major
    HAVING major != '화학'
    AND AVG(avr) >=2.0
 
 3. 근무중인 직원 3명 이상인 부서를 검색하라.(emp)
  SELECT dno, COUNT(*)
    FROM emp
    GROUP BY dno
    HAVING COUNT(*) >= 3;








