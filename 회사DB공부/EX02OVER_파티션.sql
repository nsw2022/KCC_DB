CREATE TABLE EMPLOYEES (
    EMPLOYEE_ID   NUMBER PRIMARY KEY,
    EMPLOYEE_NAME VARCHAR2(50),
    DEPARTMENT_ID NUMBER,
    SALARY        NUMBER,
    HIRE_DATE     DATE
);
INSERT INTO EMPLOYEES VALUES (1, 'Alice', 10, 5000, TO_DATE('2022-01-10', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (2, 'Bob', 10, 6000, TO_DATE('2021-05-15', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (3, 'Charlie', 10, 7000, TO_DATE('2020-08-20', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (4, 'David', 20, 8000, TO_DATE('2022-03-05', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (5, 'Eve', 20, 9000, TO_DATE('2021-07-22', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (6, 'Frank', 30, 5500, TO_DATE('2020-12-11', 'YYYY-MM-DD'));
INSERT INTO EMPLOYEES VALUES (7, 'Grace', 30, 7500, TO_DATE('2023-06-18', 'YYYY-MM-DD'));
COMMIT;

SELECT
	*
FROM employees;

-- OVER() 분석함수([칼럼]) OVER(PARTITION BY 칼럼1, 칼럼2... [ORDER BY 절] [WINDOWING 절])

-- 부서별 총 급여 합계
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    SALARY,
    SUM(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS TOTAL_DEPT_SALARY
FROM EMPLOYEES;

SELECT 
    DEPARTMENT_ID, 
    SUM(SALARY) AS TOTAL_DEPT_SALARY
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;


    
-- 부서별 급여 순위 RANK 함수는 반드시 ORDER BY를 지정해주어야함
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    SALARY,
    RANK() OVER (PARTITION BY DEPARTMENT_ID ORDER BY SALARY DESC) AS SALARY_RANK
FROM EMPLOYEES;

-- 부서별 가장 최근 입사 찾기
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    HIRE_DATE,
    FIRST_VALUE(EMPLOYEE_NAME) OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE DESC) AS NEWEST_EMPLOYEE
FROM EMPLOYEES;

-- 부서별 급여 평균과 차이 계산
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    SALARY,
    AVG(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS AVG_DEPT_SALARY,
    SALARY - AVG(SALARY) OVER (PARTITION BY DEPARTMENT_ID) AS SALARY_DIFF
FROM EMPLOYEES;


-- 부서별 연속적인 입사순번
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    HIRE_DATE,
    ROW_NUMBER() OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE ASC) AS JOIN_ORDER
FROM EMPLOYEES;

-- 이동 평균 급여
SELECT 
    EMPLOYEE_ID, 
    EMPLOYEE_NAME, 
    DEPARTMENT_ID, 
    SALARY,
    AVG(SALARY) OVER (PARTITION BY DEPARTMENT_ID ORDER BY HIRE_DATE ROWS BETWEEN 1 PRECEDING AND CURRENT ROW) AS MOVING_AVG_SALARY
FROM EMPLOYEES;
